generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model clubmember {
  A Int
  B Int

  @@unique([A, B], name: "_ClubMember_AB_unique")
  @@index([B], name: "_ClubMember_B_index")
  @@map("_clubmember")
}

model roomtouser {
  A Int
  B Int

  @@unique([A, B], name: "_RoomToUser_AB_unique")
  @@index([B], name: "_RoomToUser_B_index")
  @@map("_roomtouser")
}

model answer {
  content       String
  answerId      Int    @id @default(autoincrement())
  applicationId Int
}

model Application {
  applicationId Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  userId        Int
  clubId        Int

  @@index([clubId], name: "clubId")
  @@index([userId], name: "userId")
}

model Club {
  clubId                  Int    @id @default(autoincrement())
  clubName                String
  clubBio                 String @default("")
  description             String @default("")
  type                    String @default("")
  clubImage               String @default("https://3.bp.blogspot.com/-qtEejOg1NHA/Xobmg2y_QeI/AAAAAAAAIVE/UFKPvpeHjKUqCEFOX8lT4MsKz-PwpEGJgCLcBGAsYHQ/s1600/default_user.png")
  logoImage               String @default("https://3.bp.blogspot.com/-qtEejOg1NHA/Xobmg2y_QeI/AAAAAAAAIVE/UFKPvpeHjKUqCEFOX8lT4MsKz-PwpEGJgCLcBGAsYHQ/s1600/default_user.png")
  application_description String @default("")
  userId                  Int    @unique
}

model ClubAddInfo {
  clubAddInfoId   Int     @id @default(autoincrement())
  party           Boolean @default(false)
  partyDay        String
  clubPhoneNumber String
  socialUrl       String
  isUnion         Boolean @default(false)
  numberOfMembers Int
  email           String
  clubId          Int     @unique
}

model Message {
  messageId Int      @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  fromId    Int
  toId      Int
  roomId    Int

  @@index([fromId], name: "fromId")
  @@index([roomId], name: "roomId")
  @@index([toId], name: "toId")
}

model Option {
  optionId   Int    @id @default(autoincrement())
  content    String
  questionId Int

  @@index([questionId], name: "questionId")
}

model Post {
  title     String
  createdAt DateTime @default(now())
  content   String
  postId    Int      @id @default(autoincrement())
  file      String
  type      String
  updatedAt DateTime @default(now())
  userId    Int
  clubId    Int

  @@index([clubId], name: "clubId")
  @@index([userId], name: "userId")
}

model Question {
  questionId Int    @id @default(autoincrement())
  content    String
  type       String
  clubId     Int

  @@index([clubId], name: "clubId")
}

model Room {
  roomId Int @id @default(autoincrement())
}

model User {
  email             String  @unique
  userId            Int     @id @default(autoincrement())
  encryptedPassword String  @default("")
  userName          String  @default("")
  studentNumber     String  @default("")
  userPhoneNumber   String  @default("")
  university        String  @default("")
  major             String  @default("")
  auth              Boolean @default(false)
}
