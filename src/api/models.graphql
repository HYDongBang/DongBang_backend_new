type User {
  id:                   Int!
  email:                String!
  encryptedPassword:    String!
  name:                 String
  studentNumber:        String
  phoneNumber:          String
  university:           String
  major:                String
  clubMaster:           Club
  clubId:               Int 
  application:          [Application]
  applicationId:        Int
}

type Club {
  id:                   Int!
  name:                 String
  type:                 String
  description:          String
  content:              String
  clubImage:            String
  logoImage:            String
  partyDay:             String
  party:                Boolean
  numberOfMembers:      Int
  isUnion:              Boolean
  email:                String
  phoneNumber:          String
  facebookUrl:          String
  instagramUrl:         String
  posts:                [Post]
  applications:          [Application]
  questions:            [Question]
}

type Post {
  id:                   Int!
  title:                String
  content:              String
  fileUrl:              String
  author:               Club
  authorId:             Int
}

type Question {
  id:                   Int!       
  type:                 String
  title:                String
  index:                Int  
  choices:              [Choice]
  club:                 Club      
  clubId:               Int
}

type Choice {
  id:                   Int!
  index:                Int  
  subject:              String 
  question:             Question  
  questionId:           Int
}

type Application {
  id:                   Int!
  answers:              [Answer]
  user:                 User
  userId:               Int 
  club:                 Club
  clubId:               Int
}

type Answer {
  id:                   Int!
  index:                Int
  type:                 String
  answer:               String
  application:          Application
  applicationId:        Int
}

input AnswerInput {
  type:                 String
  answer:               String
  index:                Int
}

type Room{
    id:                 Int!
    participants:       [User]
    messages:           [Message]
    createdAt:          DateTime
    updatedAt:          DateTime
}

type Message {
    id:                 Int!
    text:               String!
    from:               User!
    to:                 User!
    room:               Room!
    fromId:             Int
    toId:               Int
    roomId:             Int
    createdAt:          DateTime
}



scalar DateTime
